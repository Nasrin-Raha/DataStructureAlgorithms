#Singly linkedlist

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
        
class LinkedList:
    def __init__(self):
        self.head = None
        
        
    def insert_at_begining(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node
        
    def insert_at_end(self, data):
        new_node = Node(data)
        if not self.head:
           self.head = new_node
           return
        last_node = self.head
        while last_node.next:
           last_node = last_node.next
        last_node.next = new_node
     
       
    def delete_node(self, key):
        current = self.head
        if current and current.data == key:
            self.head = current.next
            current = None
            return
        prev = None
        while current and current.data != key:
            prev = current
            current = current.next
            
        if current is None:
            return
        prev.next = current.next
        current = None
        
        
def search(self, key):
    current = self.next
    while current:
        if current.data == key:
            return True
        current = current.next
    return False
    
    
def traverse(self):
    elements = []
    current = self.head
    while current:
        elements.append(current.data)
        current = current.next
    return elements
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
        
        
